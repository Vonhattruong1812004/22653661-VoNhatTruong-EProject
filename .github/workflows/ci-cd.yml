name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:6
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5
        ports:
          - 27017:27017
      rabbitmq:
        image: rabbitmq:3.11-management
        ports:
          - 5672:5672
          - 15672:15672

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Install dependencies for all services
      run: |
        cd auth
        npm ci
        cd ../product
        npm ci
        cd ../order
        npm ci
        cd ../api-gateway
        npm ci
        cd ..

    - name: Wait for MongoDB and RabbitMQ
      run: |
        echo "Waiting for MongoDB to be ready..."
        until docker exec $(docker ps -q -f ancestor=mongo) mongosh --eval "db.adminCommand('ping')" > /dev/null 2>&1; do
          sleep 2
          echo "Waiting..."
        done
        echo "MongoDB is ready!"

        echo "Waiting for RabbitMQ to be ready..."
        until docker exec $(docker ps -q -f ancestor=rabbitmq) rabbitmqctl status > /dev/null 2>&1; do
          sleep 2
          echo "Waiting..."
        done
        echo "RabbitMQ is ready!"

    - name: Run tests for Auth Service
      run: |
        cd auth
        npm test
        cd ..

    - name: Run tests for Product Service
      run: |
        cd product
        npm test
        cd ..

    - name: Run tests for Order Service
      run: |
        cd order
        npm test
        cd ..

    - name: Build and test API Gateway
      run: |
        cd api-gateway
        npm test || echo "No tests defined for API Gateway"
        cd ..